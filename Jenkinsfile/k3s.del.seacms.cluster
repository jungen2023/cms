checkout=0
node {
    stage('pull code'){
       git credentialsId: '8c6e5e99-2e98-4e9d-90e1-8e7eae035a5e', url: 'https://gitee.com/jungen2023/cms.git'
    }
    
    stage('check&remove container'){
       script{
          checkout=sh(
                script: 'k3s kubectl get pods -n cms| grep seacms-app-master-slave',
                returnStatus: true
          )
          if(checkout==0){
                dir('/var/lib/jenkins/workspace/junge.pipeline.docker.seacms/k8s-yaml'){
                     sh 'k3s kubectl delete -f seacms.slave.yaml'
                } 
          }

          checkout=sh(
                script: 'k3s kubectl get pods -n cms| egrep "seacms-app-master|seacms-mdb-master"',
                returnStatus: true
          )
          if(checkout==0){
                dir('/var/lib/jenkins/workspace/junge.pipeline.docker.seacms/k8s-yaml'){
                     sh 'k3s kubectl delete -f seacms.master.yaml'
                } 
          }

          sh 'rm -rf /seacms/{mdb,app}'
       }	
    }
    
    stage('check&remove docker-image'){
       script{
          checkout=sh(
                script: 'docker images -a | egrep "seacms-app|seacms-mdb"',
                returnStatus: true
          )
          if(checkout==0){
                sh 'docker rmi seacms-app seacms-mdb seacms-app-nfs seacms-mdb-nfs'
                sh 'docker image prune -f'
          }
       }	
    }

    stage('unset port limitrules'){
       checkout=sh(
          script: 'egrep "30080|30081" /etc/iptables/rules.v4',
          returnStatus: true
       )
       if(checkout==0){
          sh 'iptables -D INPUT -p tcp --dport 30080 -j ACCEPT'
          sh 'iptables -D INPUT -p tcp --dport 30081 -j REJECT'
          sh 'iptables -D INPUT -p tcp --dport 30080 -m string --string "GET /cms" --algo kmp -j REJECT'
          sh 'iptables -D INPUT -p tcp --dport 30081 -m string --string "GET /cms" --algo kmp -j ACCEPT'
          sh 'iptables-save > /etc/iptables/rules.v4'
       }
    }
}
