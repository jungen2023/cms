#创建namespace: cms
apiVersion: v1  #指定了 Kubernetes API 的版本为v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: cms    #与命名空间名一致
  name: cms
---
#创建一个PV,挂载本地目录/seacms/app
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    volume: seacms-app-master
  name: seacms-app-master
  #namespace: cms                 #PV是集群资源，不是命名空间资源
spec:
  capacity:
    storage: 30Mi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 192.168.57.5
    path: /seacms/app
---
#创建一个PVC(seacms-app-master)，绑定PV(seacms-app-master）
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: seacms-app-master
  namespace: cms
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Mi
  selector:
    matchLabels:
      volume: seacms-app-master  #通过label绑定PV(seacms-app-master)
---
#创建一个PV挂载本地目录/seacms/mdb
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    volume: seacms-mdb-master
  name: seacms-mdb-master
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 192.168.57.5
    path: /seacms/mdb
---
#创建一个PVC(seacms-mdb-master)，绑定PV(seacms-mdb-master）
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: seacms-mdb-master
  namespace: cms
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      volume: seacms-mdb-master  #通过label绑定PV(seacms-mdb)
---
#创建一个StatefulSet类型的app(seacms-app)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seacms-app-master
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seacms-master
  template:
    metadata:
      labels:
        app: seacms-master
    spec:
      containers:
      - name: seacms-app-master
        image: seacms-app
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args: ["/run.sh && tail -f /dev/null"]
        resources:
          requests:
            cpu: "5m"
            memory: "30Mi"
          limits:
            cpu: "50m"
            memory: "50Mi"
        ports:
        - containerPort: 80
          name: web-master
          protocol: TCP
        volumeMounts:
        - mountPath: "/var/www/localhost/htdocs"
          name: seacmsapp-master
      volumes:
      - name: seacmsapp-master
        persistentVolumeClaim:
          claimName: seacms-app-master  #PVC名字
---
#创建一个Deployment类型的app(seacms-mdb-master)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seacms-mdb-master
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seacms-master
  template:
    metadata:
      labels:
        app: seacms-master
    spec:
      containers:
      - name: seacms-mdb-master
        image: seacms-mdb
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args: ["/run.sh && tail -f /dev/null"]
        resources:
          requests:
            cpu: "15m"
            memory: "90Mi"
          limits:
            cpu: "100m"
            memory: "150Mi"
        ports:
        - containerPort: 3306
          name: mysql-master
          protocol: TCP
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: seacmsmdb-master
      volumes:
      - name: seacmsmdb-master
        persistentVolumeClaim:
          claimName: seacms-mdb-master  #PVC名字
---
apiVersion: v1
kind: Service
metadata:
  name: seacms
  namespace: cms
spec:
  ports:
  - name: web-master
    protocol: TCP
    port: 80           #service对外端口
    targetPort: 80     #容器端口
    nodePort: 30081    #nodeport
  - name: mysql
    protocol: TCP
    port: 3306
    targetPort: 3306
    nodePort: 30306
  selector:
    app: seacms-master
  type: NodePort
